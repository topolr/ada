{"version":3,"sources":["/site/reply/index.js"],"names":["Reply","className","template","style","dataset","service","ReplyService","BondViewGroup","oncreated","setTimeout","add","close","closePannel","login","dispatchEvent","reply","text","finder","getElement","innerHTML","trim","length","addChild","Loading","then","loading","commit","showSuccess","Toast","parameter","content","remove"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;IAUMA,K,WARL,iBAAK;AACFC,EAAAA,SAAS,EAAE,OADT;AAEFC,EAAAA,QAAQ,EAAE,iBAFR;AAGFC,EAAAA,KAAK,EAAE,cAHL;AAIFC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAEC;AADJ;AAJP,CAAL,C,UAeI,mBAAO,OAAP,C,UAKA,mBAAO,OAAP,C,UAKA,mBAAO,OAAP,C,2BAzBL,MAQMN,KARN,SAQoBO,oBARpB,CAQkC;AAC9BC,EAAAA,SAAS,GAAG;AACRC,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKR,SAAL,CAAeS,GAAf,CAAmB,MAAnB;AACH,KAFS,CAAV;AAGH;;AAGDC,EAAAA,KADA,GACQ;AACJ,SAAKC,WAAL;AACH;;AAGDC,EAAAA,KADA,GACQ;AACJ,SAAKC,aAAL,CAAmB,OAAnB;AACH;;AAGDC,EAAAA,KADA,GACQ;AACJ,QAAIC,IAAI,GAAG,KAAKC,MAAL,CAAY,OAAZ,EAAqBC,UAArB,GAAkCC,SAA7C;;AACA,QAAIH,IAAI,CAACI,IAAL,GAAYC,MAAZ,GAAqB,CAAzB,EAA4B;AACxB,WAAKC,QAAL,CAAcC,gBAAd,EAAuBC,IAAvB,CAA4BC,OAAO,IAAI;AACnC,aAAKC,MAAL,CAAY,OAAZ,EAAqBV,IAArB,EAA2BQ,IAA3B,CAAgC,MAAM;AAClCC,UAAAA,OAAO,CAACE,WAAR;AACAF,UAAAA,OAAO,CAACd,KAAR;AACAF,UAAAA,UAAU,CAAC,MAAM;AACb,iBAAKG,WAAL;AACA,iBAAKE,aAAL,CAAmB,aAAnB;AACH,WAHS,EAGP,IAHO,CAAV;AAIH,SAPD;AAQH,OATD;AAUH,KAXD,MAWO;AACH,WAAKQ,QAAL,CAAcM,cAAd,EAAqB;AACjBC,QAAAA,SAAS,EAAE;AACPC,UAAAA,OAAO,EAAE;AADF;AADM,OAArB;AAKH;AACJ;;AAEDlB,EAAAA,WAAW,GAAG;AACV,SAAKX,SAAL,CAAe8B,MAAf,CAAsB,MAAtB;AACAtB,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKK,aAAL,CAAmB,YAAnB;AACH,KAFS,EAEP,GAFO,CAAV;AAGH;;AA7C6B,C;eAgDnBd,K","sourcesContent":["import {binder, BondViewGroup, view} from \"adajs\";\nimport ReplyService from \"./state.js\";\nimport Toast from \"./../../modules/toast\";\nimport Loading from \"./../../modules/loading\";\n\n@view({\n    className: \"reply\",\n    template: \"./template.html\",\n    style: \"./style.scss\",\n    dataset: {\n        service: ReplyService\n    }\n})\nclass Reply extends BondViewGroup {\n    oncreated() {\n        setTimeout(() => {\n            this.className.add(\"open\");\n        });\n    }\n\n    @binder(\"close\")\n    close() {\n        this.closePannel();\n    }\n\n    @binder(\"login\")\n    login() {\n        this.dispatchEvent(\"login\");\n    }\n\n    @binder(\"reply\")\n    reply() {\n        let text = this.finder(\"input\").getElement().innerHTML;\n        if (text.trim().length > 0) {\n            this.addChild(Loading).then(loading => {\n                this.commit(\"reply\", text).then(() => {\n                    loading.showSuccess();\n                    loading.close();\n                    setTimeout(() => {\n                        this.closePannel();\n                        this.dispatchEvent(\"commentdone\")\n                    }, 2000)\n                });\n            });\n        } else {\n            this.addChild(Toast, {\n                parameter: {\n                    content: \"reply content can not empty\"\n                }\n            });\n        }\n    }\n\n    closePannel() {\n        this.className.remove(\"open\");\n        setTimeout(() => {\n            this.dispatchEvent(\"closereply\");\n        }, 500);\n    }\n}\n\nexport default Reply;\n"]}
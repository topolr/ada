"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _dec,_dec2,_class,_class2,_adajs=require("adajs"),_state=_interopRequireDefault(require("modules/lazyimage/state.js")),_dispatcher=_interopRequireDefault(require("modules/dispatcher.js"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _applyDecoratedDescriptor(e,t,i,r,s){var a={};return Object.keys(r).forEach(function(e){a[e]=r[e]}),a.enumerable=!!a.enumerable,a.configurable=!!a.configurable,("value"in a||a.initializer)&&(a.writable=!0),a=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},a),s&&void 0!==a.initializer&&(a.value=a.initializer?a.initializer.call(s):void 0,a.initializer=void 0),void 0===a.initializer&&(Object.defineProperty(e,t,a),a=null),a}require("modules/style/base.scss");let Lazyimage=(_dec=(0,_adajs.view)({className:"lazyimage",template:"modules/lazyimage/template.html",style:"modules/lazyimage/style.scss",dataset:{service:_state.default},module:"modules/lazyimage/index.js"}),_dec2=(0,_adajs.subscribe)("scroll"),_dec((_applyDecoratedDescriptor((_class2=class extends _adajs.View{oncreated(){this.context.isBrowser&&(_dispatcher.default.observe(this),setTimeout(()=>this.scroll()))}onready(){this.context.isBrowser||(this.finder("image").getElement().innerHTML=`<img src="${this.getCurrentState().url}"/>`)}scroll(){let e=document.documentElement.clientHeight;this.getElement().getBoundingClientRect().top<=e&&this.loadImage()}loadImage(){let e=this.getCurrentState();if(e.url&&!e.loaded){let t=document.createElement("img");t.addEventListener("load",()=>{let e=this.finder("image").getElement();e.innerHTML="",e.appendChild(t),_dispatcher.default.unobserve(this),this.commit("loaded",!0)}),t.setAttribute("src",e.url)}}onrecover(){_dispatcher.default.observe(this),setTimeout(()=>this.scroll())}}).prototype,"scroll",[_dec2],Object.getOwnPropertyDescriptor(_class2.prototype,"scroll"),_class2.prototype),_class=_class2))||_class);var _default=Lazyimage;exports.default=_default;